- hosts: localhost
  vars_files:
          - "secret.yml"
  vars:
    db_name: "testdatabese"
    user: "root"
    pass_wd: "password"
    key_name: my_aws             # Key used for SSH
    region: eu-north-1       # Region may affect response and pricing
    image: ami-0d74f1e79c38f2933 # look in ec2 > ami (filter owner alias: amazon) or amis of manually launched instances
    id: "example testing"
    instance_type: t3.micro       # Choose instance type, check AWS for pricing
    # vpc_id: subnet-012345
    sec_group: "testgroup"
  tasks:
    - name: Create security group
      amazon.aws.ec2_security_group:
          name: "{{ sec_group }}"
          description: "Sec group for app"
          region: "{{ region }}"
          aws_access_key: "{{u}}"  # From vault as defined
          aws_secret_key: "{{p}}"  # From vault as defined
          rules:                                # allows ssh on port 22
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
    - name: create a new EC2 key pair, returns generated private key
      # use no_log to avoid private key being displayed into output
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
        aws_access_key: "{{u}}"  # From vault as defined
        aws_secret_key: "{{p}}"  # From vault as defined
      no_log: true
      register: mykey
    - name: "debugging the output"
      debug:
        var: mykey
   
    - name: write to file
      copy: whencontent="{{ mykey.key.private_key }}" dest="~/.ssh/{{ keyname }}.pem" mode=0600
      when: mykey.changed

    - name: Provisioning EC2 instances
      amazon.aws.ec2_instance:
            name: "public-compute-instance"
            key_name: "{{ key_name }}"
            # vpc_subnet_id: "{{ vpc_id }}"
            instance_type: "{{ instance_type }}"
            security_group: "{{ sec_group }}"
            aws_access_key: "{{ u }}"
            aws_secret_key: "{{ p }}"
            region: "{{ region }}"
            network:
              assign_public_ip: true
            image_id: "{{ image }}"
            wait: true
            tags:
              Environment: Testing
              Name: "mainos"
      register: X
    - name: "debugging the output"
      debug:
        var: X["instances"][0]["network_interfaces"][0]["private_ip_addresses"][0]["association"]["public_ip"]
    - name: Add instance public IP to host group
      add_host: hostname={{ item["network_interfaces"][0]["private_ip_addresses"][0]["association"]["public_ip"] }} groups=ec2hosts
      loop: "{{ X.instances }}"
    - name: create database
      rds_instance:
              engine: mysql
              region: eu-north-1
              db_instance_identifier: "{{ db_name }}"
              instance_type: db.t3.micro
              aws_access_key: "{{ u }}"
              aws_secret_key: "{{ p }}"
              password: "{{ pass_wd }}"
              username: "{{ user }}"
              allocated_storage: 20
          
    - meta: refresh_inventory
    - pause:
          seconds: 30

- hosts: "ec2hosts"
  tasks:
          - name: "installing httpd"
            package:
                    name: "httpd"
                    state: present
          - name: "installing prerequisites for wordpress"
            yum:
                    name:
                            - php
                            - tar
                            - mysql
          - name: "downloading the wordpress tar file"
            ansible.builtin.unarchive:
                    remote_src: yes
                    src: "https://wordpress.org/latest.tar.gz"
                    dest: "/var/www/html/"
          - shell: "amazon-linux-extras install php7.3 -y"
          - shell: "chown -R apache:apache /var/www/html/wordpress"
          - name: "starting the services of the httpd"
            service:
                    name: "httpd"
                    state: started
                    enabled: yes 
                    
